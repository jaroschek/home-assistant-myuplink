{
  "config": {
    "abort": {
      "already_configured": "Account is already configured",
      "already_in_progress": "Configuration flow is already in progress",
      "authorize_url_timeout": "Timeout generating authorize URL.",
      "missing_configuration": "The component is not configured. Please follow the documentation.",
      "no_url_available": "No URL available. For information about this error, [check the help section]({docs_url})",
      "oauth_error": "Received invalid token data.",
      "oauth_failed": "Error while obtaining access token.",
      "oauth_timeout": "Timeout resolving OAuth token.",
      "oauth_unauthorized": "OAuth authorization error while obtaining access token.",
      "reauth_successful": "Re-authentication was successful",
      "reconfigure_successful": "Re-configuration was successful",
      "user_rejected_authorize": "Account linking rejected: {error}"
    },
    "create_entry": {
      "default": "Successfully authenticated"
    },
    "step": {
      "pick_implementation": {
        "title": "Pick Authentication Method"
      },
      "options": {
        "data": {
          "enable_smart_home_mode": "Enable Smart Home Mode?",
          "fetch_firmware": "Fetch Firmware Info from API?",
          "fetch_notifications": "Fetch Notifications from API?",
          "scan_interval": "Scan Interval (seconds)",
          "disconnected_available": "Keep disconnected parameters available?",
          "expert_mode": "Expert Mode"
        },
        "data_description": {
          "enable_smart_home_mode": "The Smart Home Mode is a system related entity in the myUplink API.\n\nIf a system has only one single device, the Smart Home Mode will be added to this device. Otherwise the Smart Home Mode will be added to an additional device, that is based on the available system information.\n\nThe support of the Smart Home Mode requires one additional API call per system.",
          "fetch_firmware": "Requires an additional API call per device.",
          "fetch_notifications": "Requires an additional API call per system.",
          "disconnected_available": "Show parameter entities of disconnected devices as `available`.",
          "expert_mode": "Configure advanced options."
        }
      },
      "expert": {
        "title": "Expert Settings",
        "data": {
          "platform_override": "Platform Overrides",
          "writable_without_subscription": "Writable without Premium",
          "writable_override": "Writable Overrides",
          "parameter_whitelist": "Parameter Whitelist",
          "additional_parameter": "Additional Parameter"
        },
        "data_description": {
          "platform_override": "Force a specific platform for a given parameter ID.\n\nThis is sometimes necessary if the myUplink API provides incorrect parameter data and the integration detects the wrong platform.\n\nMust be valid JSON. To restore the default, invalidate the field and save. An empty field will cause no change.",
          "writable_without_subscription": "When you do not have a Premium subscription and are not able to write parameter values, create writable entities in Home Assistant anyway\n\nThis is enabled by default to avoid issues with lapsed subscriptions, non-Premium users adding subscriptions, and the possibility of myUplink providing manage permissions unilaterally.",
          "writable_override": "Set specific parameter to writeable or not writeable.\n\nThis is sometimes necessary if the myUplink API provides the wrong state for the paramter option `writable`.\n\nMust be valid JSON. To restore the default, invalidate the field and save. An empty field will cause no change.",
          "parameter_whitelist": "Restriction of the requested parameters to a specific list of parameter IDs.\n\nThis can be useful if the myUplink API provides an extremely large number of parameters, some of which are unimportant, and you want to restrict the available list of parameters.\n\nList of parameter IDs separated by commas. An empty list does not result in any restriction. Must be valid JSON. To restore the default, invalidate the field and save. An empty field does not result in any change.",
          "additional_parameter": "Add additional parameter IDs to the query.\n\nIn extremely rare cases, the myUplink API does not provide all available parameters. With this list, it is possible to add known parameter IDs, which are then queried directly.\n\nComma-separated list of parameter IDs. An empty list does not result in any restrictions. Must be valid JSON. To restore the default, invalidate the field and save. An empty field does not result in any changes."
        }
      }
    }
  },
  "entity": {
    "sensor": {
      "406": {
        "state": {
          "0": "Test",
          "1": "Off",
          "2": "Sleep",
          "3": "Eco",
          "4": "Normal",
          "5": "Express",
          "6": "Price",
          "7": "Schedule",
          "8": "External",
          "9": "Legionella",
          "10": "Vacation",
          "11": "Boost"
        }
      },
      "500": {
        "state": {
          "3": "Eco",
          "4": "Normal",
          "6": "Price",
          "7": "Schedule",
          "8": "External",
          "10": "Vacation",
          "11": "Boost"
        }
      },
      "517": {
        "state": {
          "0": "0",
          "1": "700W",
          "2": "1300W",
          "3": "2000W"
        }
      },
      "544": {
        "state": {
          "1": "NO1",
          "2": "NO2",
          "3": "NO3",
          "4": "NO4",
          "5": "NO5"
        }
      },
      "549": {
        "state": {
          "0": "Unknown",
          "1": "Cheap",
          "2": "Normal",
          "3": "Expensive"
        }
      },
      "601": {
        "state": {
          "1": "heat"
        }
      },
      "1965": {
        "state": {
          "20": "Off",
          "40": "Starting",
          "60": "On",
          "100": "Stopping",
          "120": "Defrosting",
          "140": "Defrosting",
          "160": "Defrosting"
        }
      },
      "14950": {
        "state": {
          "0": "Off",
          "1": "Heating",
          "2": "Cooling",
          "3": "Hot water",
          "4": "Pool",
          "5": "Pool 2",
          "6": "Preheating"
        }
      },
      "55000": {
        "state": {
          "10": "Off",
          "20": "Hot water",
          "30": "Heating",
          "40": "Pool",
          "41": "Pool 2",
          "50": "Transfer",
          "60": "Cooling"
        }
      },
      "55027": {
        "state": {
          "0": "Alarm",
          "1": "Alarm",
          "2": "Active",
          "3": "Off",
          "4": "Blocked",
          "5": "Off",
          "6": "Active"
        }
      },
      "myuplink_notifications": {
        "name": "Notifications"
      }
    },
    "binary_sensor": {
      "myuplink_connection_state": {
        "name": "Connection State"
      }
    },
    "select": {
      "myuplink_smart_home_mode": {
        "name": "Smart Home Mode",
        "state": {
          "default": "Default",
          "normal": "Normal",
          "away": "Away",
          "vacation": "Vacation",
          "home": "Home"
        }
      }
    },
    "update": {
      "myuplink_firmware": {
        "name": "Firmware"
      }
    }
  },
  "options": {
    "step": {
      "options": {
        "data": {
          "enable_smart_home_mode": "Enable Smart Home Mode?",
          "fetch_firmware": "Fetch Firmware Info from API?",
          "fetch_notifications": "Fetch Notifications from API?",
          "scan_interval": "Scan Interval (seconds)",
          "disconnected_available": "Keep disconnected parameters available?",
          "expert_mode": "Expert Mode"
        },
        "data_description": {
          "enable_smart_home_mode": "The Smart Home Mode is a system related entity in the myUplink API.\n\nIf a system has only one single device, the Smart Home Mode will be added to this device. Otherwise the Smart Home Mode will be added to an additional device, that is based on the available system information.\n\nThe support of the Smart Home Mode requires one additional API call per system.",
          "fetch_firmware": "Requires an additional API call per device.",
          "fetch_notifications": "Requires an additional API call per system.",
          "disconnected_available": "Show parameter entities of disconnected devices as `available`.",
          "expert_mode": "Configure advanced options."
        }
      },
      "expert": {
        "title": "Expert Settings",
        "data": {
          "platform_override": "Platform Overrides",
          "writable_without_subscription": "Writable without Premium",
          "writable_override": "Writable Overrides",
          "parameter_whitelist": "Parameter Whitelist",
          "additional_parameter": "Additional Parameter"
        },
        "data_description": {
          "platform_override": "Force a specific platform for a given parameter ID.\n\nThis is sometimes necessary if the myUplink API provides incorrect parameter data and the integration detects the wrong platform.\n\nMust be valid JSON. To restore the default, invalidate the field and save. An empty field will cause no change.",
          "writable_without_subscription": "When you do not have a Premium subscription and are not able to write parameter values, create writable entities in Home Assistant anyway\n\nThis is enabled by default to avoid issues with lapsed subscriptions, non-Premium users adding subscriptions, and the possibility of myUplink providing manage permissions unilaterally.",
          "writable_override": "Set specific parameter to writeable or not writeable.\n\nThis is sometimes necessary if the myUplink API provides the wrong state for the paramter option `writable`.\n\nMust be valid JSON. To restore the default, invalidate the field and save. An empty field will cause no change.",
          "parameter_whitelist": "Restriction of the requested parameters to a specific list of parameter IDs.\n\nThis can be useful if the myUplink API provides an extremely large number of parameters, some of which are unimportant, and you want to restrict the available list of parameters.\n\nList of parameter IDs separated by commas. An empty list does not result in any restriction. Must be valid JSON. To restore the default, invalidate the field and save. An empty field does not result in any change.",
          "additional_parameter": "Add additional parameter IDs to the query.\n\nIn extremely rare cases, the myUplink API does not provide all available parameters. With this list, it is possible to add known parameter IDs, which are then queried directly.\n\nComma-separated list of parameter IDs. An empty list does not result in any restrictions. Must be valid JSON. To restore the default, invalidate the field and save. An empty field does not result in any changes."
        }
      }
    }
  },
  "services": {
    "set_device_parameter_value": {
      "name": "Set device parameter to value",
      "description": "Service for setting any parameter identified by ID for a specific device to the desired value.",
      "fields": {
        "device_id": {
          "name": "myUplink Device",
          "description": "Select the myUplink device the parameter belongs to."
        },
        "parameter_id": {
          "name": "myUplink Parameter ID",
          "description": "Enter the id of the parameter point in the myUplink API."
        },
        "value": {
          "name": "Value",
          "description": "Enter the value to set."
        }
      }
    }
  }
}
